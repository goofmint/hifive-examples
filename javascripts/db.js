// Generated by CoffeeScript 1.7.1
$(function() {
  var SqlController, SqlLogic, async, db;
  db = null;
  async = h5.async;
  SqlLogic = {
    __name: 'SqlLogic',
    init: function() {
      var dfd, table_query;
      dfd = async.deferred();
      if (!h5.api.sqldb.isSupported) {
        alert('お使いのブラウザはWEB SQL Databaseをサポートしていません。');
        dfd.reject('SQLDB is not support.');
        return;
      }
      db = h5.api.sqldb.open('taskdb', '1', 'taskdb', 2 * 1024 * 1024);
      table_query = db.select('sqlite_master', '*').where({
        'type =': 'table'
      }).execute();
      table_query.done(function(tables) {
        var i, query, table, table_names, _i, _len;
        table_names = [];
        for (i = _i = 0, _len = tables.length; _i < _len; i = ++_i) {
          table = tables[i];
          table_names.push(tables.item(i).name);
        }
        if (!(table_names.indexOf("TASKS") >= 0)) {
          query = 'CREATE TABLE TASKS (key INTEGER NOT NULL CONSTRAINT PK_ACCOUNT PRIMARY KEY AUTOINCREMENT,';
          query += 'task CHAR(200) NOT NULL)';
          db.sql(query).execute().done(function() {
            return dfd.notify('TASKS テーブル作成');
          }).fail(function(error) {
            return dfd.reject(error);
          });
        }
        return dfd.resolve();
      });
      return dfd.promise();
    }
  };
  SqlController = {
    __name: 'SqlController',
    logic: SqlLogic,
    __templates: 'table.ejs',
    __init: function() {
      var promise;
      promise = this.logic.init();
      return promise.progress(function(msg) {
        return console.log(msg);
      }).fail(function(error) {
        return console.log(error);
      }).done(function() {
        return console.log('done');
      });
    }
  };
  return h5.core.controller('body', SqlController);
});
